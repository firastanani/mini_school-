scalar Date

type Teacher {
  _id: ID!
  name: String!
  email: String!
  imageUrl: String
  age: Int
  phoneNumber: String!
}

type Service {
  _id: ID!
  subject_en: String
  subject_ar: String
  description_en: String
  description_ar: String
  costPerHour: Int!
  createdAt: Date!
}

input TeacherInputDataForSignUp {
  email: String!
  name: String!
  password: String!
  age: Int
  image: Upload
  phoneNumber: String!
}

input TeacherInputDataForUpdate {
  name: String
  age: Int
  image: Upload
  phoneNumber: String!
}

input AddServiceData {
  subject_en: String
  subject_ar: String
  description_en: String
  description_ar: String
  costPerHour: Int!
}

type Query {
  hello: String
}

type Mutation {
  signUpTeacher(data: TeacherInputDataForSignUp!): Teacher!
  addService(data: AddServiceData!): Service!
  deleteService(serviceId: ID!): Service!
}
